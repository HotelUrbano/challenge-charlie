/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
img {
  max-width: 100%;
}
*,
*:after,
*:before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
a {
  color: inherit;
  text-decoration: inherit;
  font: inherit;
}
ul {
  list-style: none;
  padding: 0;
  margin: 0;
}
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}
/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}
/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}
/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}
/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}
/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}
/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}
/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}
/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}
/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}
/**
 * Add the correct display in IE.
 */
template {
  display: none;
}
/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local('Roboto Light'), local('Roboto-Light'), url(https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fBBc9.ttf) format('truetype');
}
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  src: local('Roboto'), local('Roboto-Regular'), url(https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxP.ttf) format('truetype');
}
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  src: local('Roboto Bold'), local('Roboto-Bold'), url(https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmWUlfBBc9.ttf) format('truetype');
}
@font-face {
  font-family: 'icomoon';
  src: url('fonts/icomoon.eot?7hh4fq');
  src: url('fonts/icomoon.eot?7hh4fq#iefix') format('embedded-opentype'), url('fonts/icomoon.ttf?7hh4fq') format('truetype'), url('fonts/icomoon.woff?7hh4fq') format('woff'), url('fonts/icomoon.svg?7hh4fq#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
}
[class^="icon-"],
[class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.icon-sol:before {
  content: "\e900";
}
.icon-nuvem:before {
  content: "\e901";
}
.icon-chuva:before {
  content: "\e902";
}
.icon-sol-black:before {
  content: "\e903";
}
.icon-nuvem-black:before {
  content: "\e904";
}
.icon-chuva-black:before {
  content: "\e905";
}
.icon-bulsola:before {
  content: "\e906";
}
.icon-na:before {
  content: "\e907";
}
.icon-ce:before {
  content: "\e908";
}
.icon-fe:before {
  content: "\e909";
}
body {
  font-family: 'Roboto', sans-serif;
}
.btn_primary {
  background: #FF7900;
  color: white;
  border: 0;
  padding: 10px 25px;
  font-size: 18px;
}
@media only screen and (max-width: 768px) {
  .btn_primary {
    font-size: 14px;
  }
}
.btn_secondary {
  font-size: 14px;
  text-transform: uppercase;
  background-color: #143A7C;
  color: white;
  padding: 20px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: justify;
      justify-content: space-between;
  background-image: url('../images/arrow_hover.png');
  background-repeat: no-repeat;
  background-position: -400px center;
  transition: all 0.3s;
  overflow: hidden;
}
@media only screen and (max-width: 640px) {
  .btn_secondary {
    font-size: 12px;
  }
}
.btn_secondary:hover {
  background-position: right center;
  font-size: 16px;
}
.btn_secondary:hover:after {
  right: -60px;
}
.btn_secondary:after {
  content: '';
  background: url('../images/left-arrow.png') no-repeat center;
  width: 26px;
  height: 26px;
  background-size: cover;
  transform: rotate(180deg);
  position: relative;
  transition: all 0.3s;
  right: 0;
}
.title-1 {
  text-align: center;
  margin: 0 0 30px;
  font-size: 24px;
  color: #000;
}
@media only screen and (max-width: 640px) {
  .title-1 {
    font-size: 18px;
  }
}
.head_title {
  background: #524e4ed1;
  display: block;
  width: 100%;
  text-align: center;
  color: white;
  font-weight: normal;
  padding: 15px 10px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  font-size: 28px;
}
@media only screen and (max-width: 640px) {
  .head_title {
    font-size: 20px;
    padding: 20px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center;
  }
  .head_title span {
    display: block;
    max-width: 260px;
    margin-top: 15px;
  }
}
.head_title:before {
  content: "\e906";
  font-family: 'icomoon';
  margin-right: 10px;
  font-size: 30px;
}
@media only screen and (max-width: 640px) {
  .head_title:before {
    font-size: 24px;
  }
}
.box_info {
  width: 40%;
  min-height: 510px;
  min-width: 620px;
  max-width: 768px;
  display: -ms-flexbox;
  display: flex;
  padding: 20px;
  position: relative;
  overflow: hidden;
}
@media only screen and (max-width: 768px) {
  .box_info {
    min-width: inherit;
    width: 90%;
  }
}
.box_info.focus .back {
  left: 10px;
}
.box_info .back {
  position: absolute;
  top: 10px;
  z-index: 99;
  font-size: 14px;
  color: #000;
  padding: 10px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  left: -300px;
  transition: all 0.3s;
}
.box_info .back:before {
  content: '';
  background: url('../images/left-arrow_black.png') no-repeat center;
  width: 26px;
  height: 26px;
  background-size: cover;
  position: relative;
  transition: all 0.3s;
  margin-right: 5px;
}
.box_info .buttons_wrap {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 300px;
  margin: 0 auto;
}
@media only screen and (max-width: 640px) {
  .box_info .buttons_wrap {
    width: 260px;
  }
}
.box_info .buttons_wrap .btn_secondary:first-child {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}
.box_info .buttons_wrap .btn_secondary:last-child {
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
}
.box_info > .item {
  height: 100%;
  width: 100%;
  -ms-flex-item-align: center;
      -ms-grid-row-align: center;
      align-self: center;
}
.day_forecast {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 100%;
  height: 100%;
}
.day_forecast.disabled .item {
  background: grey;
  pointer-events: none;
}
.day_forecast.disabled .item i {
  display: none;
}
.day_forecast .item {
  background: #ffff0082;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  color: white;
  padding: 10px;
  height: 80px;
  transition: all ease-in 0.3s;
  cursor: pointer;
}
.day_forecast .item.sun {
  background: #ff200069;
}
.day_forecast .item.cold {
  background: #00ffff6b;
}
.day_forecast .item.active {
  height: 100%;
  cursor: inherit;
}
.day_forecast .item.active .info {
  height: 100%;
}
.day_forecast .item.active p {
  display: block;
}
.day_forecast .item.active p.day {
  margin-bottom: 10px;
}
.day_forecast .item.active i {
  font-size: 15vh;
}
.day_forecast .item i {
  font-size: 3vh;
  transition: all ease-in 0.3s;
  margin-right: 20px;
}
.day_forecast .item p {
  display: none;
}
.day_forecast .item .info {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  height: 20px;
  -ms-flex-pack: center;
      justify-content: center;
  overflow: hidden;
  transition: all ease-in 0.3s;
}
.day_forecast .item .info p {
  font-size: 16px;
  line-height: 22px;
}
@media only screen and (max-width: 640px) {
  .day_forecast .item .info p {
    font-size: 14px;
    line-height: 20px;
  }
}
.day_forecast .item .info p.day {
  font-size: 20px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
}
@media only screen and (max-width: 640px) {
  .day_forecast .item .info p.day {
    font-size: 20px;
  }
}
.day_forecast .item .info p.temperature {
  font-size: 26px;
  margin-bottom: 30px;
  cursor: pointer;
}
.day_forecast .item .info p.temperature.ce:after {
  content: "\e908";
  font-family: 'icomoon';
  font-size: 30px;
  margin-bottom: -10px;
  display: inline-block;
}
.day_forecast .item .info p.temperature.fe:after {
  content: "\e909";
  font-family: 'icomoon';
  font-size: 30px;
  margin-bottom: -10px;
  display: inline-block;
}
.form_area {
  width: 80%;
  margin: 0 auto;
}
.form_area .form_action {
  width: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
      justify-content: flex-end;
  margin-top: 20px;
}
.form_area .input_text {
  width: 100%;
  padding: 15px;
  font-size: 18px;
  border: 1px solid #4d4d4d;
}
@media only screen and (max-width: 768px) {
  .form_area .input_text {
    font-size: 14px;
  }
}
.form_area .form_group {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
}
@media only screen and (max-width: 768px) {
  .form_area .form_group {
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    width: 100%;
    margin: 0 auto;
  }
}
.form_area .form_group .label {
  width: 48%;
}
@media only screen and (max-width: 768px) {
  .form_area .form_group .label {
    width: 100%;
    margin: 10px auto;
  }
}
.steps .step {
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  visibility: hidden;
  width: 100%;
  height: 100%;
  transition: all 0.3s;
  background: rgba(255, 255, 255, 0.3);
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-direction: column;
      flex-direction: column;
}
.steps .step.step-1 {
  transform: translate(-150%, -50%);
}
.steps .step.step-2 {
  transform: translate(150%, -50%);
}
.steps .step.step-2.next {
  transform: translate(-150%, -50%);
}
.steps .step.step-2 .form_item {
  display: none;
}
.steps .step.step-2.name .type1 {
  display: block;
}
.steps .step.step-2.lat .type2 {
  display: -ms-flexbox;
  display: flex;
}
.steps .step.step-3 {
  transform: translate(300%, -50%);
  background: transparent;
}
.steps .step.active {
  opacity: 1;
  visibility: visible;
  z-index: 9;
  transform: translate(-50%, -50%);
}
.weather_forecast .media img {
  width: 100%;
  min-height: 100vh;
  object-fit: cover;
  object-position: center;
}
.weather_forecast .overlay {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  min-height: 100vh;
  background: rgba(0, 0, 0, 0.5);
}
.weather_forecast .wrapper {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  min-height: 100vh;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
