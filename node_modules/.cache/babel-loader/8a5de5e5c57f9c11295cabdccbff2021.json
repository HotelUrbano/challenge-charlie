{"ast":null,"code":"var _jsxFileName = \"/Users/user/Projects/thiagorrrr/challenge-charlie/src/Molecules/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport { ThemeContext } from './ThemeContext';\nimport debounce from \"lodash.debounce\";\nimport SearchIcon from \"../svg/SearchIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [inputCity, setInputCity] = useState(\"\");\n\n  const sendValue = value => setInputCity(value);\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [notValidate, setNotValidate] = useState(false);\n  const [validate, setValidate] = useState(false); // debounce input\n\n  const delayedValue = useRef(debounce(value => sendValue(value), 100)).current;\n\n  const onChange = e => {\n    setInputValue(e.target.value);\n    delayedValue(e.target.value);\n  };\n\n  const {\n    ChangeCity\n  } = useContext(ThemeContext);\n\n  const SetEnterSearch = e => {\n    // This funcion validates if onKeyPress (button Enter) is invalid\n    setValidate(true);\n    setTimeout(() => {\n      if (!notValidate) {\n        if (e.key === 'Enter') {\n          ChangeCity(inputCity);\n        }\n      }\n    }, 500);\n  };\n\n  useEffect(() => {\n    // This funcion validates the input, just letters\n    const ValidateInput = () => {\n      const regex = /^[a-záàâãéèêíïóôõöúçñ ]+$/i;\n      regex.test(inputCity) && inputValue.length > 0 ? setNotValidate(false) : setNotValidate(true);\n    };\n\n    if (validate) ValidateInput();\n  }, [inputCity, inputValue, validate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: `search__label ${notValidate ? \"search__label--error\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search__input\",\n        type: \"text\",\n        placeholder: \"Cidade\",\n        onChange: onChange,\n        value: inputValue,\n        onKeyPress: event => SetEnterSearch(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search__btn\",\n        onClick: () => ChangeCity(inputCity, !notValidate),\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), notValidate ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"search__error\",\n      children: \" Por favor digite o nome de uma cidade \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"quyQubiGIctPxPgs9qq49zwz95M=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/user/Projects/thiagorrrr/challenge-charlie/src/Molecules/Search.js"],"names":["React","useState","useContext","useRef","useEffect","ThemeContext","debounce","SearchIcon","Search","inputCity","setInputCity","sendValue","value","inputValue","setInputValue","notValidate","setNotValidate","validate","setValidate","delayedValue","current","onChange","e","target","ChangeCity","SetEnterSearch","setTimeout","key","ValidateInput","regex","test","length","event"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { ThemeContext } from './ThemeContext'\nimport debounce from \"lodash.debounce\";\nimport SearchIcon from \"../svg/SearchIcon\";\n\nfunction Search() {\n  const [inputCity, setInputCity] = useState(\"\");\n  const sendValue = (value) => setInputCity(value);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [notValidate, setNotValidate] = useState(false);\n  const [validate, setValidate] = useState(false);\n\n  // debounce input\n  const delayedValue = useRef(debounce(value => sendValue(value), 100)).current;\n  const onChange = e => {\n    setInputValue(e.target.value);\n    delayedValue(e.target.value);\n  };\n  const { ChangeCity } = useContext(ThemeContext);\n\n  const SetEnterSearch = (e) => {\n    // This funcion validates if onKeyPress (button Enter) is invalid\n    setValidate(true);\n    setTimeout(()=>{\n      if (!notValidate) {\n        if (e.key === 'Enter') {\n          ChangeCity(inputCity)\n        } \n      }\n    }, 500)\n  }\n\n  useEffect(()=> {\n    // This funcion validates the input, just letters\n    const ValidateInput = () => {\n      const regex = /^[a-záàâãéèêíïóôõöúçñ ]+$/i;\n      regex.test(inputCity) && inputValue.length > 0 ? setNotValidate(false) : setNotValidate(true); \n    }\n    if (validate) ValidateInput()\n    \n  },[inputCity, inputValue, validate])\n  \n  return (\n    <div className=\"search\">\n      <label className={`search__label ${(notValidate ? \"search__label--error\" : \"\")}`}>\n        <input className=\"search__input\" type=\"text\" placeholder=\"Cidade\" onChange={onChange} value={inputValue} onKeyPress={event => SetEnterSearch(event)} />\n        <button className=\"search__btn\"\n          onClick={() => ChangeCity(inputCity, !notValidate) }\n        >\n          <SearchIcon />\n        </button>\n      </label>\n      {\n        notValidate ? \n        <span className=\"search__error\"> Por favor digite o nome de uma cidade </span>: null\n      }\n    </div>\n  )\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}